services:
  grafana:
    build:
      context: ../..
      dockerfile: docker/docker-files/grafana/Dockerfile.grafana
      args:
        - NGINX_HOST=${NGINX_HOST}
    #image: grafana/grafana-enterprise:11.2.2-ubuntu
    container_name: grafana
    hostname: ${HOST_GRAFANA}
    restart: unless-stopped
    environment:
      #- GF_RENDERING_SERVER_URL=http://renderer:8081/render
      #- GF_RENDERING_CALLBACK_URL=http://${HOST_GRAFANA}:${PORT_GRAFANA}/
      #- GF_LOG_FILTERS=rendering:debug
      - GF_INSTALL_PLUGINS=marcusolsson-json-datasource,marcusolsson-dynamictext-panel,volkovlabs-form-panel,volkovlabs-echarts-panel
      - GF_SERVER_DOMAIN=${NGINX_HOST}
      - GF_SERVER_ROOT_URL=http://${NGINX_HOST}:${PORT_GRAFANA}/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - TZ=${TIME_ZONE}
    
    volumes:
      - 'grafana_storage:/var/lib/grafana'
    ports:
      - 3000:3000
    networks:
      - peresvet
    
  #renderer:
  #  image: grafana/grafana-image-renderer:latest
  #  hostname: renderer
  #  ports:
  #    - 8081
  #  networks:
  #    - peresvet

networks:
  peresvet:
    driver: bridge
    ipam:
      config:
          - subnet: 10.66.0.0/16
            gateway: 10.66.0.1

volumes:
  grafana_storage: {}
