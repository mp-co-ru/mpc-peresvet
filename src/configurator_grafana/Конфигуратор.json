{
  "__inputs": [
    {
      "name": "DS_PERESVET",
      "label": "peresvet",
      "description": "",
      "type": "datasource",
      "pluginId": "marcusolsson-json-datasource",
      "pluginName": "JSON API"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.2.2"
    },
    {
      "type": "panel",
      "id": "marcusolsson-dynamictext-panel",
      "name": "Business Text",
      "version": "5.4.0"
    },
    {
      "type": "datasource",
      "id": "marcusolsson-json-datasource",
      "name": "JSON API",
      "version": "1.3.17"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_PERESVET}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 26,
        "w": 19,
        "x": 0,
        "y": 0
      },
      "id": 5,
      "options": {
        "afterRender": "var pluginName = \"bstreeview\",\n  defaults = {\n    expandIcon: 'fa fa-angle-down fa-fw',\n    collapseIcon: 'fa fa-angle-right fa-fw',\n    expandClass: 'show',\n    indent: 1.25,\n    parentsMarginLeft: '1.25rem',\n    openNodeLinkOnNewTab: true\n\n  };\n/**\n * bstreeview HTML templates.\n */\nvar templates = {\n  treeview: '<div class=\"bstreeview\"></div>',\n  treeviewItem: '<div role=\"treeitem\" class=\"list-group-item\" data-bs-toggle=\"collapse\"></div>',\n  treeviewGroupItem: '<div role=\"group\" class=\"list-group collapse\" id=\"itemid\"></div>',\n  treeviewItemStateIcon: '<i class=\"state-icon\"></i>',\n  treeviewItemIcon: '<i class=\"item-icon\"></i>'\n};\n/**\n * BsTreeview Plugin constructor.\n * @param {*} element\n * @param {*} options\n */\nfunction bstreeView(element, options) {\n  this.element = element;\n  this.itemIdPrefix = element.id + \"-item-\";\n  this.settings = $.extend({}, defaults, options);\n  this.init();\n}\n/**\n * Avoid plugin conflict.\n */\n$.extend(bstreeView.prototype, {\n  /**\n   * bstreeview intialize.\n   */\n  init: function () {\n    this.tree = [];\n    this.nodes = [];\n    // Retrieve bstreeview Json Data.\n    if (this.settings.data) {\n      if (this.settings.data.isPrototypeOf(String)) {\n        this.settings.data = $.parseJSON(this.settings.data);\n      }\n      this.tree = $.extend(true, [], this.settings.data);\n      delete this.settings.data;\n    }\n    // Set main bstreeview class to element.\n    $(this.element).addClass('bstreeview');\n\n    this.initData({ nodes: this.tree });\n    var _this = this;\n    this.build($(this.element), this.tree, 0);\n    // Update angle icon on collapse\n    $(this.element).on('click', '.list-group-item', function (e) {\n      $('.state-icon', this)\n        .toggleClass(_this.settings.expandIcon)\n        .toggleClass(_this.settings.collapseIcon);\n      // navigate to href if present\n      if (e.target.hasAttribute('href')) {\n        if (_this.settings.openNodeLinkOnNewTab) {\n          window.open(e.target.getAttribute('href'), '_blank');\n        }\n        else {\n          window.location = e.target.getAttribute('href');\n        }\n      }\n      else {\n        // Toggle the data-bs-target. Issue with Bootstrap toggle and dynamic code\n        $($(this).attr(\"data-bs-target\")).collapse('toggle');\n      }\n    });\n  },\n  /**\n   * Initialize treeview Data.\n   * @param {*} node\n   */\n  initData: function (node) {\n    if (!node.nodes) return;\n    var parent = node;\n    var _this = this;\n    $.each(node.nodes, function checkStates(index, node) {\n\n      node.nodeId = _this.nodes.length;\n      node.parentId = parent.nodeId;\n      _this.nodes.push(node);\n\n      if (node.nodes) {\n        _this.initData(node);\n      }\n    });\n  },\n  /**\n   * Build treeview.\n   * @param {*} parentElement\n   * @param {*} nodes\n   * @param {*} depth\n   */\n  build: function (parentElement, nodes, depth) {\n    var _this = this;\n    // Calculate item padding.\n    var leftPadding = _this.settings.parentsMarginLeft;\n    //var leftPadding = 0;\n\n    if (depth > 1) {\n      leftPadding = (_this.settings.parentsMarginLeft + depth * _this.settings.indent).toString() + \"rem;\";\n    }\n    depth += 1;\n    // Add each node and sub-nodes.\n    $.each(nodes, function addNodes(id, node) {\n      // Main node element.\n      var treeItem = $(templates.treeviewItem)\n        .attr('data-bs-target', \"#\" + _this.itemIdPrefix + node.nodeId)\n        .attr('style', 'padding-left:' + leftPadding)\n        .attr('aria-level', depth);\n      // Set Expand and Collapse icones.\n      if (node.nodes) {\n        var treeItemStateIcon = $(templates.treeviewItemStateIcon)\n          .addClass((node.expanded) ? _this.settings.expandIcon : _this.settings.collapseIcon);\n        treeItem.append(treeItemStateIcon);\n      }\n      // set node icon if exist.\n      if (node.icon) {\n        var treeItemIcon = $(templates.treeviewItemIcon)\n          .addClass(node.icon);\n        treeItem.append(treeItemIcon);\n      }\n\n      Object.entries(node).map((entry) => {\n        switch (entry[0]) {\n          case \"text\":\n            treeItem.append(node.text);\n            break;\n          case \"class\":\n            treeItem.addClass(node.class);\n            break;\n          case \"nodes\":\n          case \"nodeId\":\n          case \"parentId\":\n          case \"icon\":\n            break;\n          default:\n            treeItem.attr(entry[0], entry[1]);\n            break;\n        }\n      });\n\n      // Attach node to parent.\n      parentElement.append(treeItem);\n      // Build child nodes.\n      if (node.nodes) {\n        // Node group item.\n        var treeGroup = $(templates.treeviewGroupItem)\n          .attr('id', _this.itemIdPrefix + node.nodeId);\n        parentElement.append(treeGroup);\n        _this.build(treeGroup, node.nodes, depth);\n        if (node.expanded) {\n          treeGroup.addClass(_this.settings.expandClass);\n        }\n      }\n    });\n  }\n});\n\n// A really lightweight plugin wrapper around the constructor,\n// preventing against multiple instantiations\n$.fn[pluginName] = function (options) {\n  return this.each(function () {\n    if (!$.data(this, \"plugin_\" + pluginName)) {\n      $.data(this, \"plugin_\" +\n        pluginName, new bstreeView(this, options));\n    }\n  });\n};\n\n\n// начало ------------------------------------------------------------------------------------------------------------------------\n\ninitiatorsTabClicked = (butName) => {\n  if (butName === \"schedules\") {\n    $(\"#v-pills-Tags-tab\").removeClass(\"active\");\n    $(\"#v-pills-Tags-tab\").attr(\"aria-selected\", \"false\");\n\n    $(\"#v-pills-Schedules-tab\").addClass(\"active\");\n    $(\"#v-pills-Schedules-tab\").attr(\"aria-selected\", \"true\");\n\n    $(\"#v-pills-Tags\").removeClass(\"show active\");\n    $(\"#v-pills-Schedules\").addClass(\"show active\");\n  } else {\n    $(\"#v-pills-Tags-tab\").addClass(\"active\");\n    $(\"#v-pills-Tags-tab\").attr(\"aria-selected\", \"true\");\n\n    $(\"#v-pills-Schedules-tab\").removeClass(\"active\");\n    $(\"#v-pills-Schedules-tab\").attr(\"aria-selected\", \"false\");\n\n    $(\"#v-pills-Tags\").addClass(\"show active\");\n    $(\"#v-pills-Schedules\").removeClass(\"show active\");\n  }\n}\n\n\nvar topNodes = [\n  {\n    id: \"objects\",\n    text: \"Объекты\",\n    icon: \"fa-solid fa-object-group\",\n    objectClass: \"prsObject\",\n    tabindex: \"0\",\n    onclick: \"clickNode(event);\",\n    onfocus: \"getFocus(event);\"\n  },\n  {\n    id: \"tags\",\n    text: \"Теги\",\n    icon: \"fa-solid fa-tags\",\n    objectClass: \"prsTag\",\n    tabindex: \"0\",\n    onclick: \"clickNode(event);\",\n    onfocus: \"getFocus(event);\"\n  },\n  {\n    id: \"connectors\",\n    text: \"Коннекторы\",\n    icon: \"fa-solid fa-link\",\n    objectClass: \"prsConnector\",\n    tabindex: \"0\",\n    onclick: \"clickNode(event);\",\n    onfocus: \"getFocus(event);\"\n  },\n  {\n    id: \"schedules\",\n    icon: \"fa-solid fa-clock\",\n    text: \"Расписания\",\n    objectClass: \"prsSchedule\",\n    tabindex: \"0\",\n    onclick: \"clickNode(event);\",\n    onfocus: \"getFocus(event);\"\n  }\n];\n\nvar topNodesIds = topNodes.map((node) => {\n  return node.id;\n})\n\n/*\nvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nvar tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n  return new bootstrap.Tooltip(tooltipTriggerEl)\n});\n*/\n\nconst baseIndent = 1.5;\nconst parentsMarginLeft = 0.25;\nconst options = {\n  data: topNodes,\n  expandIcon: 'fa fa-angle-down fa-fw',\n  collapseIcon: 'fa fa-angle-right fa-fw',\n  indent: baseIndent,\n  parentsMarginLeft: `${parentsMarginLeft}rem`,\n  openNodeLinkOnNewTab: true\n}\nconst int_attrs = [\"prsIndex\", \"prsValueTypeCode\", \"prsEntityTypeCode\"];\nconst bool_attrs = [\"prsActive\", \"prsStep\", \"prsUpdate\", \"prsDefault\"]\n\n$('#tree').bstreeview(options);\n// ----------------------------------------------------------------------------------------------------------------------------\n\nsaveChanges = () => {\n  let nodeId = $(\"#div-nodeId\").text();\n  let objectClass = $(\".currentNode\").attr(\"objectClass\");\n  let url = window.location.protocol + \"//\" + window.location.hostname + apis[objectClass];\n  let changedElements = [...$(\".value-changed\")];\n\n  let payload = {\n    id: nodeId,\n    attributes: {}\n  }\n\n  let cnChanged = false;\n  changedElements.map((element) => {\n    attr = element.getAttribute(\"prsAttribute\");\n    if (attr === \"cn\")\n      cnChanged = true;\n\n    if ((attr !== \"initiatedBy\") && (attr !== \"alertConfig\") && (attr !== \"scheduleConfig\")) {\n      if (int_attrs.includes(attr) && (element.value !== null)) {\n        payload.attributes[attr] = Number(element.value);\n      } else if (bool_attrs.includes(attr) && (element.value !== null)) {\n        payload.attributes[attr] = element.value === 'true';\n      } else\n        payload.attributes[attr] = element.value;\n    } else if (attr === \"alertConfig\") {\n      payload.attributes[\"prsJsonConfigString\"] = {\n        high: $(\"#input-alertConfHigh\").val() === 'true',\n        value: Number($(\"#input-alertConfValue\").val()),\n        autoAck: $(\"#input-alertConfAutoack\").val() === 'true'\n      }\n    } else if (attr === \"scheduleConfig\") {\n      ts = {}\n      if ($(\"#input-scheduleConfStart\").val() !== '') {\n        dt = new Date(Date.parse($(\"#input-scheduleConfStart\").val()));\n        ts.start = dt.toISOString();\n      }\n      if ($(\"#input-scheduleConfIntervalType\").val())\n        ts.interval_type = $(\"#input-scheduleConfIntervalType\").val()\n      if ($(\"#input-scheduleConfIntervalValue\").val())\n        ts.interval_value = Number($(\"#input-scheduleConfIntervalValue\").val())\n      if ($(\"#input-scheduleConfEnd\").val() !== '') {\n        dt = new Date(Date.parse($(\"#input-scheduleConfEnd\").val()));\n        ts.end = dt2.toISOString();\n      }\n      payload.attributes[\"prsJsonConfigString\"] = ts\n    }\n  });\n\n  if (objectClass === \"prsMethod\") {\n    let initiatedBy = [];\n\n    // если меняется метод, то надо собрать всех инициаторов, независимо от того, что изменилось\n    $(\"#input-initiatedByTags > option\").each(function () {\n      if (this.selected) {\n        initiatedBy.push(this.value);\n      }\n    });\n    $(\"#input-initiatedBySchedules > option\").each(function () {\n      if (this.selected)\n        initiatedBy.push(this.value);\n    });\n    payload.initiatedBy = initiatedBy;\n  }\n\n  fetch(url, {\n    method: \"PUT\",\n    body: JSON.stringify(payload),\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).then((response) => {\n    if (!response.ok) {\n      showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateDataAlert\", `Ошибка обновления по запросу '${body}'`);\n      return;\n    }\n\n    if (cnChanged) {\n      $(\"#div-nodeName\").text(payload.attributes.cn);\n      $(`#${payload.id}`).contents().last().replaceWith(payload.attributes.cn);\n    }\n    changedElements.map((element) => {\n      element.setAttribute(\"init-value\", element.value);\n      element.classList.remove(\"value-changed\");\n    });\n    $(\"#but-save\").addClass(\"disabled\");\n    $(\"#but-reset\").addClass(\"disabled\");\n  });\n  changeTagDataPanelOnSave();\n};\n\naddParameter = (event, parameterData) => {\n  let divParameters = document.getElementById(\"div-list-parameters\");\n  let lastSpanParameter = divParameters.lastElementChild;\n\n  let lastLevel = -1;\n  if (lastSpanParameter) {\n    lastLevel = Number(lastSpanParameter.getAttribute(\"prsIndex\"));\n  }\n  let newLevel = lastLevel + 1;\n\n  $(\"#div-list-parameters\").append(`\n\t\t\t\t<div class=\"d-flex align-items-center\" prsIndex=\"${newLevel}\" id=\"span-parameter-${newLevel}\">\n\t\t\t\t\t<div class=\"col-1 me-2\">\n\t\t\t\t\t\t<input class=\"form-control form-control-sm\" prsAttribute=\"parameter\" onchange=\"onInputChange(event);\" type=\"number\" id=\"input-parameter-prsIndex-${newLevel}\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 me-2\">\n\t\t\t\t\t\t<input class=\"form-control form-control-sm\" prsAttribute=\"parameter\" onchange=\"onInputChange(event);\" type=\"text\" id=\"input-parameter-cn-${newLevel}\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col me-2\">\n\t\t\t\t\t\t<input class=\"form-control form-control-sm\" prsAttribute=\"parameter\" onchange=\"onInputChange(event);\" type=\"text\" id=\"input-parameter-prsJsonConfigString-${newLevel}\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button id=\"but-deleteParameter-${newLevel}\" class=\"btn btn-sm m-1 btn-danger\" onclick=\"deleteParameter(event);\">\n\t\t\t\t\t\t<span><i class=\"fa-solid fa-minus\"></i></span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t`);\n\n  if (parameterData) {\n    let index = Number(parameterData.attributes.prsIndex[0]);\n    let name = parameterData.attributes.cn[0];\n    let config = parameterData.attributes.prsJsonConfigString[0];\n\n    $(`#input-parameter-prsIndex-${newLevel}`).val(index);\n    $(`#input-parameter-cn-${newLevel}`).val(name);\n    $(`#input-parameter-prsJsonConfigString-${newLevel}`).val(config);\n  }\n}\n\ndeleteParameter = (event) => {\n  event.stopPropagation();\n  targetBut = event.target;\n  targetBut.parentElement.remove();\n}\n\ndeleteNode = () => {\n  let currentNode = $(\".currentNode\")[0];\n  let nodeId = currentNode.id;\n  let objectClass = currentNode.getAttribute(\"objectClass\");\n  let url = window.location.protocol + \"//\" + window.location.hostname + apis[objectClass];\n  fetch(url, {\n    method: \"DELETE\",\n    body: JSON.stringify({ id: nodeId }),\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).then((response) => {\n    if (!response.ok) {\n      showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка удаления узла ${nodeId}`);\n      return;\n    };\n\n    let group = getNodeGroup(currentNode);\n    if (group) {\n      group.remove();\n    }\n    currentNode.remove();\n  });\n};\n\nonInputChange = (event) => {\n  targetEl = event.target;\n  initValue = targetEl.getAttribute(\"init-value\");\n  let equal = false;\n  if (targetEl.tagName === \"SELECT\") {\n    let curVal = $(targetEl).val()\n    if (Array.isArray(curVal))\n      curVal.join(',');\n    equal = initValue === curVal;\n  } else\n    equal = (initValue === $(targetEl).val())\n\n  if (equal)\n    targetEl.classList.remove(\"value-changed\");\n  else\n    targetEl.classList.add(\"value-changed\");\n\n  inputs = document.querySelectorAll(\".value-changed\");\n  if (inputs.length > 0) {\n    $(\"#but-save\").removeClass(\"disabled\");\n    $(\"#but-reset\").removeClass(\"disabled\");\n  } else {\n    $(\"#but-save\").addClass(\"disabled\");\n    $(\"#but-reset\").addClass(\"disabled\");\n  }\n};\n\ngetFocus = (event) => {\n  event.stopPropagation();\n\n  els = document.getElementsByClassName(\"currentNode\");\n  elsArray = [...els];\n  elsArray.map((el) => {\n    el.classList.toggle(\"currentNode\");\n  });\n  el = event.target;\n  el.classList.toggle(\"currentNode\");\n};\n\nsortList = (group) => {\n  var new_group = group.cloneNode(false);\n  // Add all lis to an array\n  var groupItems = [];\n  for (var i = 0; i < group.childNodes.length; i++) {\n    if (group.childNodes[i].getAttribute(\"role\") === 'treeitem')\n      groupItems.push(group.childNodes[i]);\n  }\n  // Sort the lis in descending order\n  groupItems.sort((a, b) => {\n    res = 1;\n\n    if ((a.getAttribute(\"objectClass\") == \"prsObject\") &&\n      (b.getAttribute(\"objectClass\") == \"prsTag\")) {\n      res = -1;\n    } else if ((a.getAttribute(\"objectClass\") == \"prsTag\") &&\n      (b.getAttribute(\"objectClass\") == \"prsObject\")) {\n      res = 1;\n    } else if (a.textContent < b.textContent) {\n      res = -1;\n    } else {\n      res = 1;\n    }\n\n    return res;\n  });\n\n  for (var i = 0; i < groupItems.length; i++) {\n    new_group.appendChild(groupItems[i]);\n    //dataBsTargetId = groupItems[i].getAttribute(\"data-bs-target\").substring(1);\n    //itemGroup = document.getElementById(dataBsTargetId);\n    //if (itemGroup) new_group\n  }\n\n  if (group.parentNode !== null) {\n    group.parentNode.replaceChild(new_group, group);\n  };\n};\n\naddNode = (parentElement, node, top = false) => {\n  // добавление узла в иерархию\n  // parentElement - родительский элемент\n  // node - {\n  //  id: \"...\",\n  //  text: \"...\",\n  //  icon: \"....\",\n  //  objectClass: \"...\",\n  // }\n  // top - добавлять в начало списка\n\n  // атрибут data-bs-target у узла всегда создаётся, но вот \n  // элемента, на который он указывает, может и не быть\n  parentGroupId = parentElement.getAttribute(\"data-bs-target\").substring(1);\n  parentGroup = document.getElementById(parentGroupId);\n  if (!parentGroup) {\n    parentGroup = document.createElement(\"div\");\n    parentGroup.setAttribute(\"role\", \"group\");\n    parentGroup.setAttribute(\"class\", \"list-group collapse show\");\n    parentGroup.setAttribute(\"id\", parentGroupId);\n\n    parentElement.parentNode.insertBefore(parentGroup, parentElement.nextSibling);\n\n    icon = parentElement.querySelector('.state-icon');\n    if (!icon) {\n      icon = document.createElement(\"i\");\n      parentElement.insertBefore(icon, parentElement.firstChild);\n    }\n    icon.setAttribute(\"class\", `state-icon ${options.expandIcon}`);\n  }\n\n  parentAreaLevel = Number(parentElement.getAttribute(\"aria-level\"));\n\n  itemDiv = document.createElement(\"div\");\n  itemDiv.setAttribute(\"id\", node.id);\n  itemDiv.setAttribute(\"role\", \"treeitem\");\n  itemDiv.setAttribute(\"class\", \"list-group-item\");\n  itemDiv.setAttribute(\"data-bs-toggle\", \"collapse\");\n  itemDiv.setAttribute(\"data-bs-target\", `#group_${node.id}`);\n  padding = parentsMarginLeft + baseIndent * parentAreaLevel;\n  itemDiv.setAttribute(\"style\", `padding-left:${padding}rem`);\n  itemDiv.setAttribute(\"aria-level\", `${parentAreaLevel + 1}`);\n  itemDiv.setAttribute(\"objectClass\", node.objectClass);\n  itemDiv.setAttribute(\"tabindex\", \"0\");\n  switch (node.objectClass) {\n    case \"prsObject\":\n    case \"prsTag\":\n    case \"prsAlert\":\n    case \"prsMethod\":\n      itemDiv.classList.add(node.objectClass);\n  }\n  itemDiv.setAttribute(\"onclick\", \"clickNode(event);\");\n  itemDiv.setAttribute(\"onfocus\", \"getFocus(event);\");\n\n  if ((top) && (parentGroup.children.length > 0)) {\n    parentGroup.insertBefore(itemDiv, parentGroup.firstChild);\n  } else {\n    parentGroup.appendChild(itemDiv);\n  };\n\n  if (node.icon) {\n    icon = document.createElement(\"i\");\n    icon.setAttribute(\"class\", `item-icon ${node.icon}`);\n    itemDiv.append(icon)\n  }\n  itemDiv.append(node.text);\n\n  return itemDiv;\n}\n\n// возвращает группу узла, в которой находятся его дети\ngetNodeGroup = (nodeElement) => {\n  dataBsTargetId = nodeElement.getAttribute(\"data-bs-target\").substring(1);\n  return document.getElementById(dataBsTargetId);\n};\n\nconst typeNames = {\n  \"prsObject\": \"Объект\",\n  \"prsTag\": \"Тег\",\n  \"prsAlert\": \"Тревога\",\n  \"prsMethod\": \"Метод\",\n  \"prsConnector\": \"Коннектор\",\n  \"prsSchedule\": \"Расписание\"\n}\n\nconst visibility = {\n  \"prsObject\": {\n    \"visible\": [\"div-prsIndex\"], // имя, описание, индекс, активный - видны всегда\n    \"hidden\": [\"div-prsMethodAddress\", \"div-prsValueTypeCode\", \"div-tagData\",\n      \"div-prsJsonConfigString\", \"div-prsUpdate\", \"div-prsDefault\", \"div-prsStep\",\n      \"div-prsMeasureUnits\", \"div-initiatedBy\", \"div-parameters\", \"div-alertConfig\", \"div-scheduleConfig\", \"div-prsEntityTypeCode\"]\n  },\n  \"prsTag\": {\n    \"visible\": [\"div-prsValueTypeCode\", \"div-prsUpdate\", \"div-prsStep\", \"div-prsMeasureUnits\", \"div-tagData\"],\n    \"hidden\": [\"div-prsIndex\", \"div-prsMethodAddress\", \"div-prsDefault\", \"div-prsJsonConfigString\",\n      \"div-initiatedBy\", \"div-parameters\", \"div-alertConfig\", \"div-scheduleConfig\", \"div-prsEntityTypeCode\"]\n  },\n  \"prsAlert\": {\n    \"visible\": [\"div-alertConfig\"],\n    \"hidden\": [\"div-prsIndex\", \"div-prsMethodAddress\", \"div-prsDefault\",\n      \"div-prsUpdate\", \"div-prsStep\", \"div-prsMeasureUnits\", \"div-prsValueTypeCode\",\n      \"div-initiatedBy\", \"div-parameters\", \"div-prsJsonConfigString\", \"div-scheduleConfig\", \"div-prsEntityTypeCode\", \"div-tagData\"]\n  },\n  \"prsMethod\": {\n    \"visible\": [\"div-prsMethodAddress\", \"div-initiatedBy\", \"div-parameters\"],\n    \"hidden\": [\"div-prsIndex\", \"div-prsEntityTypeCode\", \"div-prsJsonConfigString\", \"div-prsDefault\",\n      \"div-prsUpdate\", \"div-prsStep\", \"div-prsMeasureUnits\", \"div-prsValueTypeCode\", \"div-alertConfig\", \"div-scheduleConfig\", \"div-tagData\"]\n  },\n  \"prsConnector\": {\n    \"visible\": [\"div-prsJsonConfigString\"],\n    \"hidden\": [\"div-prsIndex\", \"div-prsMethodAddress\", \"div-prsEntityTypeCode\", \"div-prsDefault\",\n      \"div-prsUpdate\", \"div-prsStep\", \"div-prsMeasureUnits\", \"div-prsValueTypeCode\",\n      \"div-initiatedBy\", \"div-parameters\", \"div-alertConfig\", \"div-scheduleConfig\", \"div-tagData\"]\n  },\n  \"prsSchedule\": {\n    \"visible\": [\"div-scheduleConfig\"],\n    \"hidden\": [\"div-prsIndex\", \"div-prsDefault\",\n      \"div-prsUpdate\", \"div-prsStep\", \"div-prsMeasureUnits\", \"div-prsValueTypeCode\",\n      \"div-prsMethodAddress\", \"div-initiatedBy\", \"div-parameters\", \"div-alertConfig\", \"div-prsJsonConfigString\", \"div-prsEntityTypeCode\", \"div-tagData\"\n    ]\n  }\n}\n\nconst apis = {\n  \"prsObject\": \"/v1/objects/\",\n  \"prsTag\": \"/v1/tags/\",\n  \"prsAlert\": \"/v1/alerts/\",\n  \"prsMethod\": \"/v1/methods/\",\n  \"prsConnector\": \"/v1/connectors/\",\n  \"prsSchedule\": \"/v1/schedules/\"\n}\n\nsetAttributesVisibility = (nodeElement) => {\n  nodeId = nodeElement.id;\n  objClass = nodeElement.getAttribute(\"objectClass\");\n\n  attributesForm = document.getElementById('attributes-form');\n  if (topNodesIds.includes(nodeId)) {\n    attributesForm.classList.add(\"d-none\");\n    return;\n  }\n  attributesForm.classList.remove(\"d-none\");\n\n  visibility[objClass][\"hidden\"].map((div) => {\n    document.getElementById(div).classList.add('d-none');\n  })\n  visibility[objClass][\"visible\"].map((div) => {\n    document.getElementById(div).classList.remove('d-none');\n  })\n};\n\nsetAddButtonsVisibility = (clickedNode) => {\n  objClass = clickedNode.getAttribute(\"objectClass\");\n  nodeId = clickedNode.id;\n  switch (objClass) {\n    case \"prsObject\":\n      $(\"#but-newObject\").removeClass(\"d-none\");\n      $(\"#but-newAlert\").addClass(\"d-none\");\n      $(\"#but-newMethod\").addClass(\"d-none\");\n      $(\"#but-newSchedule\").addClass(\"d-none\");\n      $(\"#but-newConnector\").addClass(\"d-none\");\n      if (nodeId === \"objects\") {\n        $(\"#but-delNode\").addClass(\"d-none\");\n        $(\"#but-newTag\").addClass(\"d-none\");\n      } else {\n        $(\"#but-delNode\").removeClass(\"d-none\");\n        $(\"#but-newTag\").removeClass(\"d-none\");\n      }\n      break;\n    case \"prsTag\":\n      $(\"#but-newObject\").addClass(\"d-none\");\n      $(\"#but-newSchedule\").addClass(\"d-none\");\n      $(\"#but-newConnector\").addClass(\"d-none\");\n      if (nodeId === \"tags\") {\n        $(\"#but-delNode\").addClass(\"d-none\");\n        $(\"#but-newTag\").removeClass(\"d-none\");\n        $(\"#but-newAlert\").addClass(\"d-none\");\n        $(\"#but-newMethod\").addClass(\"d-none\");\n      } else {\n        $(\"#but-delNode\").removeClass(\"d-none\");\n        $(\"#but-newTag\").addClass(\"d-none\");\n        $(\"#but-newAlert\").removeClass(\"d-none\");\n        $(\"#but-newMethod\").removeClass(\"d-none\");\n      }\n      break;\n    case \"prsAlert\":\n      $(\"#but-newObject\").addClass(\"d-none\");\n      $(\"#but-newTag\").addClass(\"d-none\");\n      $(\"#but-newAlert\").addClass(\"d-none\");\n      $(\"#but-newMethod\").removeClass(\"d-none\");\n      $(\"#but-newSchedule\").addClass(\"d-none\");\n      $(\"#but-newConnector\").addClass(\"d-none\");\n      $(\"#but-delNode\").removeClass(\"d-none\");\n      break;\n    case \"prsMethod\":\n      $(\"#but-newObject\").addClass(\"d-none\");\n      $(\"#but-newTag\").addClass(\"d-none\");\n      $(\"#but-newAlert\").addClass(\"d-none\");\n      $(\"#but-newMethod\").addClass(\"d-none\");\n      $(\"#but-newSchedule\").addClass(\"d-none\");\n      $(\"#but-newConnector\").addClass(\"d-none\");\n      $(\"#but-delNode\").removeClass(\"d-none\");\n      break;\n    case \"prsSchedule\":\n      $(\"#but-newObject\").addClass(\"d-none\");\n      $(\"#but-newAlert\").addClass(\"d-none\");\n      $(\"#but-newTag\").addClass(\"d-none\");\n      $(\"#but-newMethod\").addClass(\"d-none\");\n      $(\"#but-newConnector\").addClass(\"d-none\");\n      if (nodeId === \"schedules\") {\n        $(\"#but-delNode\").addClass(\"d-none\");\n        $(\"#but-newSchedule\").removeClass(\"d-none\");\n\n      } else {\n        $(\"#but-delNode\").removeClass(\"d-none\");\n        $(\"#but-newSchedule\").addClass(\"d-none\");\n      }\n      break;\n    case \"prsConnector\":\n      $(\"#but-newObject\").addClass(\"d-none\");\n      $(\"#but-newAlert\").addClass(\"d-none\");\n      $(\"#but-newTag\").addClass(\"d-none\");\n      $(\"#but-newMethod\").addClass(\"d-none\");\n      $(\"#but-newSchedule\").addClass(\"d-none\");\n      if (nodeId === \"connectors\") {\n        $(\"#but-delNode\").addClass(\"d-none\");\n        $(\"#but-newConnector\").removeClass(\"d-none\");\n\n      } else {\n        $(\"#but-delNode\").removeClass(\"d-none\");\n        $(\"#but-newConnector\").addClass(\"d-none\");\n      }\n      break;\n  }\n};\n\nshowAlert = (divAlertId, divAlertMessageId, icon, message, norm) => {\n  $(`#${divAlertMessageId}`).text(message);\n  $(`#${divAlertId}`).removeClass(\"d-none\");\n  if (norm) {\n    $(`#${divAlertId}`).removeClass(\"alert-danger\");\n    $(`#${divAlertId}`).addClass(\"alert-success\");\n\n    $(`#${icon}`).removeClass(\"fa-solid fa-circle-exclamation\");\n    $(`#${icon}`).addClass(\"fas fa-check-circle\");\n\n  } else {\n    $(`#${divAlertId}`).addClass(\"alert-danger\");\n    $(`#${divAlertId}`).removeClass(\"alert-success\");\n\n    $(`#${icon}`).addClass(\"fa-solid fa-circle-exclamation\");\n    $(`#${icon}`).removeClass(\"fas fa-check-circle\");\n  }\n\n  setTimeout(() => {\n    $(`#${divAlertId}`).addClass(\"d-none\");\n  }, 5000);\n}\n\naddNodeToHierarchy = (api) => {\n\n  if (api === 'connectors') {\n    showAlert(\"div-butAlert\", \"div-butAlertMessage\", \"i-butAlert\",\n      'Работа с коннекторами - в следующей версии конфигуратора.', true);\n    return;\n  }\n\n  url = window.location.protocol + \"//\" + window.location.hostname + \"/v1/\" + api + \"/\";\n\n  parentId = $(\"div.currentNode\")[0].id;\n\n  if (!($(\"div.currentNode\").attr(\"aria-expanded\"))) {\n\n    var clickEvent = new MouseEvent(\"click\", {\n      \"view\": window,\n      \"bubbles\": true,\n      \"cancelable\": false\n    });\n    el = document.getElementById(parentId);\n    el.dispatchEvent(clickEvent);\n    el.focus();\n  }\n\n  payload = { attributes: {} };\n  if (!((parentId === \"objects\") || (parentId === \"tags\") || (parentId === \"connectors\") || (parentId === \"schedules\"))) {\n    payload.parentId = parentId;\n  }\n\n  fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(payload),\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).then((response) => {\n    if (response.status !== 201) {\n      showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка создания нового узла: ${JSON.stringify(response.json())}`, false);\n      return;\n    }\n    return response.json();\n  }).then((data) => {\n    new_id = data.id;\n    url += `?q=${encodeURIComponent(JSON.stringify({\n      id: new_id,\n      attributes: [\"cn\", \"objectClass\"]\n    }))}`;\n    fetch(url, {\n      headers: {\n        \"Content-type\": \"application/json\",\n      }\n    }).then((response) => {\n      if (response.status !== 200) {\n        showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка получения данных по вновь созданному объекту ${new_id}`, false);\n        return;\n      }\n      return response.json();\n    }).then((data) => {\n      divToExtend = document.getElementById(parentId);\n      node = {\n        id: new_id,\n        text: data.data[0].attributes.cn[0],\n        objectClass: data.data[0].attributes.objectClass[0]\n      };\n      switch (node.objectClass) {\n        case \"prsObject\":\n          node.icon = \"fa-solid fa-object-ungroup prsObject\";\n          break;\n        case \"prsTag\":\n          node.icon = \"fa-solid fa-tag prsTag\";\n          break;\n        case \"prsAlert\":\n          node.icon = \"fa-solid fa-bell prsAlert\";\n          break;\n        case \"prsMethod\":\n          node.icon = \"fa-solid fa-file-code prsMethod\";\n          break;\n        case \"prsConnector\":\n          node.icon = \"fa-solid fa-link prsConnector\";\n          break;\n        case \"prsSchedule\":\n          node.icon = \"fa-solid fa-clock prsSchedule\";\n          break;\n      }\n\n      new_node = addNode(divToExtend, node, true);\n\n      // привяжем тег к хранилищу\n      if ((api === \"tags\") || (api === \"alerts\")) {\n        urlDs = window.location.protocol + \"//\" + window.location.hostname + \"/v1/dataStorages/\";\n\n        payload = { base: \"\", attributes: [\"cn\"] };\n        urlDsGet = urlDs + `?q=${encodeURIComponent(JSON.stringify(payload))}`;\n        fetch(urlDsGet, {\n          headers: {\n            \"Content-type\": \"application/json\",\n          }\n        }).then((response) => {\n          if (response.status !== 200) {\n            showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка получения данных по хранилищу ${new_id}`, false);\n            return;\n          }\n          return response.json();\n        }).then((data) => {\n          payload = {\n            id: data.data[0].id\n          }\n          if (api === \"tags\") {\n            payload.linkTags = [{ tagId: node.id }]\n          } else {\n            payload.linkAlerts = [{ alertId: node.id }]\n          }\n\n          fetch(urlDs, {\n            method: \"PUT\",\n            body: JSON.stringify(payload),\n            headers: new Headers({\n              'Content-Type': 'application/json'\n            })\n          }).then((response) => {\n            if (response.status !== 202) {\n              showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка получения данных по хранилищу ${JSON.stringify(response.json())}`, false);\n              return;\n            }\n          })\n        })\n      }\n\n      var clickEvent = new MouseEvent(\"click\", {\n        \"view\": window,\n        \"bubbles\": true,\n        \"cancelable\": false\n      });\n      new_node.dispatchEvent(clickEvent);\n      new_node.focus();\n    })\n  });\n};\n\nvar tagGetDataURL = '';\nvar tagGetDataPayload = {};\nvar tagSetDataURL = '';\nvar tagSetDataPayload = {};\ngetTagData = () => {\n  fetch(tagGetDataURL, {\n    headers: {\n      \"Content-type\": \"application/json\",\n    }\n  }).then((response) => {\n    if (response.status !== 200) {\n      showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка получения данных тега '${tagGetDataPayload.tagId}'`, false);\n      return;\n    }\n    return response.json();\n  }).then((data) => {\n    tagData = data.data[0].data;\n\n    tBody = $(\"#tbody-tagData\").empty();\n    tagData.map((dataItem) => {\n      tr = $(\"<tr></tr>\").appendTo(tBody);\n      tr.append(`<td>${dataItem[0]}</td><td>${dataItem[1]}</td><td>${dataItem[2]}</td>`);\n    });\n  });\n}\n\nsetTagData = () => {\n  fetch(tagSetDataURL, {\n    method: \"POST\",\n    body: JSON.stringify(tagSetDataPayload),\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).then((response) => {\n    if (!response.ok) {\n      showAlert(\"div-setDataAlert\", \"div-setDataAlertMessage\", \"i-setDataAlert\", `Ошибка обновления по запросу '${body}'`, false);\n    } else {\n      showAlert(\"div-setDataAlert\", \"div-setDataAlertMessage\", \"i-setDataAlert\", `Данные успешно записаны.`, true);\n    }\n  })\n}\n\nchangeTagDataPanelOnSave = () => {\n  tBody = $(\"#tbody-tagData\").empty();\n  value_type = Number($(\"#input-prsValueTypeCode\").val());\n  input_el = $(\"#input-tagSetDataValue\");\n  input_el.val(null);\n  switch (value_type) {\n    case 0:\n    case 1:\n      input_el.attr(\"type\", \"number\");\n      break;\n    case 2:\n      input_el.attr(\"type\", \"text\");\n      break;\n    case 4:\n      input_el.attr(\"type\", \"textarea\");\n      break;\n  }\n}\n\ntagSetDataValueChanged = () => {\n  value_type = Number($(\"#input-prsValueTypeCode\").attr(\"init-value\"));\n  value = $(\"#input-tagSetDataValue\").val();\n  switch (value_type) {\n    case 4:\n      try {\n        value = JSON.parse(value);\n      } catch (err) {\n        showAlert(\"div-setDataAlert\", \"div-setDataAlertMessage\", \"i-setDataAlert\", `Ошибка конвертирования json: ${err}`, false);\n        $(\"#input-tagSetDataValue\").val(null);\n        tagSetDataPayload = {\n          data: [\n            {\n              tagId: $(\"#div-nodeId\").text(),\n              data: [[null]]\n            }\n          ]\n        }\n        $(\"#span-tagSetDataBody\").text(JSON.stringify(tagSetDataPayload, null, \"\\t\"));\n        return;\n      }\n      break;\n\n    case 0:\n    case 1:\n      try {\n        value = Number(value);\n      } catch (err) {\n        showAlert(\"div-setDataAlert\", \"div-setDataAlertMessage\", \"i-setDataAlert\", `Ошибка конвертирования числа: ${err}`, false);\n        $(\"#input-tagSetDataValue\").val(null);\n        tagSetDataPayload = {\n          data: [\n            {\n              tagId: $(\"#div-nodeId\").text(),\n              data: [[null]]\n            }\n          ]\n        }\n        $(\"#span-tagSetDataBody\").text(JSON.stringify(tagSetDataPayload, null, \"\\t\"));\n        return;\n      }\n  }\n\n  tagSetDataPayload = {\n    data: [\n      {\n        tagId: $(\"#div-nodeId\").text(),\n        data: [[value]]\n      }\n    ]\n  }\n\n  $(\"#span-tagSetDataBody\").text(JSON.stringify(tagSetDataPayload, null, \"\\t\"));\n}\n\nformTagDataPanels = () => {\n  let post_url = `${window.location.protocol}//${window.location.hostname}/v1/data/`;\n  let get_url = `${post_url}?q=`;\n  tagGetDataPayload = {\n    tagId: $(\"#div-nodeId\").text()\n  }\n\n  format = $(\"#input-tagGetDataFormat\").is(\":checked\");\n  if (format)\n    tagGetDataPayload.format = true;\n\n  actual = $(\"#input-tagGetDataActual\").is(\":checked\");\n  if (actual)\n    tagGetDataPayload.actual = true;\n\n  tagGetDataURL = `${get_url}${JSON.stringify(tagGetDataPayload)}`\n  $(\"#span-tagGetDataURL\").text(tagGetDataURL);\n\n  $(\"#tbody-tagData\").empty();\n\n  tagSetDataURL = post_url;\n  tagSetDataPayload = {\n    data: [\n      {\n        tagId: $(\"#div-nodeId\").text(),\n        data: [[null]]\n      }\n    ]\n  }\n  $(\"#span-tagSetDataURL\").text(tagSetDataURL);\n  $(\"#span-tagSetDataBody\").text(JSON.stringify(tagSetDataPayload, null, \"\\t\"));\n}\n\nfillForm = (nodeElement) => {\n  let nodeId = nodeElement.id;\n  let header = document.getElementById(\"div-nodeName\");\n  header.innerText = nodeElement.innerText;\n\n  let attrsType = document.getElementById(\"div-nodeType\");\n  let objClass = nodeElement.getAttribute(\"objectClass\");\n  attrsType.innerText = typeNames[objClass];\n\n  let attrsId = document.getElementById(\"div-nodeId\");\n  attrsId.innerText = nodeId;\n\n  let payload = {\n    id: nodeId,\n    attributes: [\"cn\", \"objectClass\", \"description\", \"prsActive\", \"prsArchive\", \"prsCompress\",\n      \"prsDefault\", \"prsStep\", \"prsUpdate\", \"prsValueTypeCode\", \"prsEntityTypeCode\", \"prsIndex\",\n      \"prsJsonConfigString\", \"prsMeasureUnits\", \"prsMethodAddress\"],\n    getParent: true\n  }\n\n  let params = new URLSearchParams({ q: JSON.stringify(payload) }).toString();\n\n  let api = apis[objClass];\n  if (!api) return;\n\n  let url = `${window.location.protocol}//${window.location.hostname}${api}?${params}`;\n\n  fetch(url).then((response) => {\n    if (response.status !== 200) {\n      showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка чтения данных: ${JSON.stringify(response.json())}`, false);\n      return;\n    }\n    return response.json();\n  }).then((data) => {\n    if (data.data.length == 0) {\n      showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Нет данных по узлу ${nodeElement.innerText}`, false);\n      return;\n    }\n\n    nodeData = data.data[0];\n    Object.entries(nodeData.attributes).map((entry) => {\n      value = \"\";\n      switch (entry[1][0]) {\n        case \"TRUE\":\n          value = \"true\"\n          break;\n        case \"FALSE\":\n          value = \"false\";\n          break;\n        default:\n          value = (entry[1][0] === null) ? \"\" : entry[1][0]\n      }\n\n      if ((objClass === \"prsAlert\") && (entry[0] === \"prsJsonConfigString\")) {\n        conf = JSON.parse(value);\n        $(\"#input-alertConfHigh\").attr(\"init-value\", conf.high).val(conf.high.toString());\n        $(\"#input-alertConfValue\").attr(\"init-value\", conf.value).val(conf.value);\n        $(\"#input-alertConfAutoack\").attr(\"init-value\", conf.autoAck).val(conf.autoAck.toString());\n      } else if ((objClass === \"prsSchedule\") && (entry[0] === \"prsJsonConfigString\")) {\n        // много кода из-за кривизны работы javascript с метками времени, точнее - с временными зонами\n        conf = JSON.parse(value);\n        dt = new Date(Date.parse(conf.start));\n        ms = dt.getTimezoneOffset() * 60000;\n        dt2 = new Date(dt.getTime() - ms);\n        $(\"#input-scheduleConfStart\").attr(\"init-value\", dt2.toISOString().substring(0, 16)).val(dt2.toISOString().substring(0, 16));\n        $(\"#input-scheduleConfIntervalType\").attr(\"init-value\", conf.interval_type).val(conf.interval_type);\n        $(\"#input-scheduleConfIntervalValue\").attr(\"init-value\", conf.interval_value).val(conf.interval_value);\n        if ((\"end\" in conf) && (conf.end)) {\n          dt = new Date(Date.parse(conf.end));\n          ms = dt.getTimezoneOffset() * 60000;\n          dt2 = new Date(dt.getTime() - ms);\n          $(\"#input-scheduleConfEnd\").attr(\"init-value\", dt2.toISOString().substring(0, 16)).val(dt2.toISOString().substring(0, 16));\n        } else $(\"#input-scheduleConfEnd\").attr(\"init-value\", null);\n      } else {\n        element = document.getElementById(`input-${entry[0]}`);\n        if (element) {\n          element.value = value;\n          element.setAttribute(\"init-value\", value);\n        }\n      }\n    });\n\n    // для метода - заполним список initiatedBy и parameters\n    if (objClass === \"prsMethod\") {\n      // параметры\n      $(\"#div-list-parameters\").empty();\n      nodeData.parameters.map((item) => {\n        addParameter(null, item);\n      });\n\n      $(\"#input-initiatedByTags option\").remove();\n      $(\"#input-initiatedByAlerts option\").remove();\n      $(\"#input-initiatedBySchedules option\").remove();\n      let getTagsAlertsSchedulesPayload = {\n        base: \"prs\",\n        deref: false,\n        scope: 2,\n        filter: {\n          objectClass: [\"prsTag\", \"prsAlert\", \"prsSchedule\"]\n        },\n        attributes: [\"cn\", \"objectClass\"]\n      }\n      let params = new URLSearchParams({ q: JSON.stringify(getTagsAlertsSchedulesPayload) }).toString();\n\n      let url = `${window.location.protocol}//${window.location.hostname}/v1/objects/?${params}`;\n      fetch(url).then((response) => {\n        if (!response.ok) {\n          showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", \"Ошибка получения списка тегов, тревог, расписаний.\", false);\n          return;\n        }\n        return response.json();\n      }).then((allNodes) => {\n        let selectId = \"\";\n        allNodes.data.map((dataItem) => {\n          switch (dataItem.attributes.objectClass[0]) {\n            case \"prsTag\":\n              selectId = \"#input-initiatedByTags\";\n              break;\n            case \"prsAlert\":\n              selectId = \"#input-initiatedByAlerts\";\n              break;\n            case \"prsSchedule\":\n              selectId = \"#input-initiatedBySchedules\";\n          };\n\n          let selected = nodeData.initiatedBy.includes(dataItem.id);\n          let disabled = dataItem.id === nodeData.parentId;\n          if (selected)\n            $(selectId).append(`<option selected value=\"${dataItem.id}\">${dataItem.attributes.cn[0]}&nbsp;(${dataItem.id})</option>`);\n          else\n            if (!disabled)\n              $(selectId).append(`<option value=\"${dataItem.id}\">${dataItem.attributes.cn[0]}&nbsp;(${dataItem.id})</option>`);\n        });\n\n        $(\"#input-initiatedByTags\").attr(\"init-value\", $(\"#input-initiatedByTags\").val());\n        $(\"#input-initiatedByAlerts\").attr(\"init-value\", $(\"#input-initiatedByAlerts\").val());\n        $(\"#input-initiatedBySchedules\").attr(\"init-value\", $(\"#input-initiatedBySchedules\").val());\n      })\n    }\n\n    // для тега подготовим панели работы с данными\n    if (objClass === \"prsTag\")\n      changeTagDataPanelOnSave();\n    formTagDataPanels();\n  });\n};\n\nremoveClassOnElements = (styleClass) => {\n  const elements = document.querySelectorAll(`.${styleClass}`);\n\n  elements.forEach((element) => {\n    element.classList.remove(styleClass);\n  });\n}\n\nresetChanges = () => {\n  const elements = document.querySelectorAll(`.value-changed`);\n  els = [...elements];\n  els.map((el) => {\n    initValue = el.getAttribute(\"init-value\");\n    el.value = initValue;\n    el.classList.remove(\"value-changed\");\n  });\n  $(\"#but-reset\").addClass(\"disabled\");\n  $(\"#but-save\").addClass(\"disabled\");\n};\n\nclickNode = (event) => {\n  event.stopPropagation();\n\n  let clickedNode = event.target;\n\n  removeClassOnElements(\"value-changed\");\n\n  setAttributesVisibility(clickedNode);\n\n  setAddButtonsVisibility(clickedNode);\n\n  let expanded = clickedNode.getAttribute(\"aria-expanded\");\n  if (expanded) {\n    clickedNode.removeAttribute(\"aria-expanded\");\n    let group = getNodeGroup(clickedNode);\n    if (group) {\n      group.remove();\n\n      let icon = clickedNode.querySelector(\".state-icon\");\n      if (icon) {\n        icon.className = `state-icon ${options.collapseIcon}`;\n      }\n\n      return;\n    }\n  }\n  clickedNode.setAttribute(\"aria-expanded\", \"true\");\n  let clickedObjectClass = clickedNode.getAttribute(\"objectClass\");\n  let clickedId = clickedNode.id;\n\n  let api = apis[clickedObjectClass];\n\n  if (!api) return;\n\n  let payload = {\n    base: \"\",\n    attributes: [\"cn\", \"objectClass\"],\n    filter: { objectClass: [\"prsObject\", \"prsMethod\", \"prsTag\", \"prsAlert\", \"prsConnector\", \"prsSchedule\"] },\n    scope: 1,\n    hierarchy: true,\n  }\n\n  if (!((clickedId === \"objects\") || (clickedId === \"tags\")\n    || (clickedId === \"connectors\") || (clickedId === \"schedules\"))) {\n    payload.base = clickedId;\n    fillForm(clickedNode);\n  }\n\n  let params = new URLSearchParams({ q: JSON.stringify(payload) }).toString();\n\n  let url = `${window.location.protocol}//${window.location.hostname}${api}?${params}`;\n\n  fetch(url).then((response) => {\n    if (response.status !== 200) {\n      showAlert(\"div-updateAlert\", \"div-updateAlertMessage\", \"i-updateAlert\", `Ошибка чтения данных: ${JSON.stringify(response.json())}`, false);\n      return;\n    }\n    return response.json();\n  }).then((data) => {\n    data.data.map((nodeItem) => {\n      node = {\n        id: nodeItem.id,\n        text: nodeItem.attributes.cn[0],\n        objectClass: nodeItem.attributes.objectClass[0]\n      };\n      switch (node.objectClass) {\n        case \"prsObject\":\n          node.icon = \"fa-solid fa-object-ungroup prsObject\";\n          break;\n        case \"prsTag\":\n          node.icon = \"fa-solid fa-tag prsTag\";\n          break;\n        case \"prsAlert\":\n          node.icon = \"fa-solid fa-bell prsAlert\";\n          break;\n        case \"prsMethod\":\n          node.icon = \"fa-solid fa-file-code prsMethod\";\n          break;\n        case \"prsConnector\":\n          node.icon = \"fa-solid fa-link prsConnector\";\n          break;\n        case \"prsSchedule\":\n          node.icon = \"fa-solid fa-clock prsSchedule\";\n          break;\n      };\n      addNode(clickedNode, node);\n    });\n\n    groupItems = getNodeGroup(clickedNode);\n    if (groupItems) sortList(groupItems);\n  });\n};\n",
        "content": "<div class=\"main-container\">\n\t<div class=\"element-holder col-4\">\n\t\t<div class=\"p-2 sub-element\">\n\t\t\t<a href=\"https://mp-co-ru.github.io/mpc-peresvet/\"\n\t\t\t\ttarget=\"_blank\"><img src=\"public/assets/pics/logo_middle.png\" class=\"edge\" width=\"8%\"/></a>&nbsp;\n\t\t\t<button id=\"but-newObject\" class=\"btn btn-primary btn-icon btn-sm d-none\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\" title=\"Новый объект\"\n\t\t\t\t\t\tonclick=\"addNodeToHierarchy('objects');\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-object-ungroup\"></i></span><i class=\"fa-solid fa-plus\"></i>\n\t\t\t\t\t</button>\n\t\t\t<button id=\"but-newTag\" class=\"btn btn-primary btn-icon btn-sm d-none\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\" title=\"Новый тег\"\n\t\t\t\t\t\tonclick=\"addNodeToHierarchy('tags');\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-tag\"></i></span><i class=\"fa-solid fa-plus\"></i>\n\t\t\t\t\t</button>\n\t\t\t<button id=\"but-newAlert\" class=\"btn btn-primary btn-icon btn-sm d-none\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\" title=\"Новая тревога\"\n\t\t\t\t\t\tonclick=\"addNodeToHierarchy('alerts');\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-bell\"></i></span><i class=\"fa-solid fa-plus\"></i>\n\t\t\t\t\t</button>\n\t\t\t<button id=\"but-newMethod\" class=\"btn btn-primary btn-icon btn-sm d-none\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\" title=\"Новый метод\"\n\t\t\t\t\t\tonclick=\"addNodeToHierarchy('methods');\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-file-code\"></i></span><i class=\"fa-solid fa-plus\"></i>\n\t\t\t\t\t</button>\n\t\t\t<button id=\"but-newConnector\" class=\"btn btn-primary btn-icon btn-sm d-none\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\" title=\"Новый коннектор\"\n\t\t\t\t\t\tonclick=\"addNodeToHierarchy('connectors');\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-link\"></i></span><i class=\"fa-solid fa-plus\"></i>\n\t\t\t\t\t</button>\n\t\t\t<button id=\"but-newSchedule\" class=\"btn btn-primary btn-icon btn-sm d-none\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\" title=\"Новое расписание\"\n\t\t\t\t\t\tonclick=\"addNodeToHierarchy('schedules');\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-clock\"></i></span><i class=\"fa-solid fa-plus\"></i>\n\t\t\t\t\t</button>&nbsp;&nbsp;\n\t\t\t<button id=\"but-delNode\" class=\"btn btn-danger btn-icon btn-sm d-none\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\" title=\"Удалить текущий узел\"\n\t\t\t\t\t\tonclick=\"deleteNode();\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-trash-can\"></i></span><i class=\"fa-solid fa-xmark\"></i>\n\t\t\t\t\t</button>\n\t\t</div>\n\t\t<div id=\"div-butAlert\" class=\"alert alert-message alert-dismissible d-flex rounded p-0 mt-3 d-none\" role=\"alert\">\n\t\t\t<div class=\"alert-icon d-flex justify-content-center align-items-center flex-grow-0 flex-shrink-0 py-3\">\n\t\t\t\t<i class=\"fa-solid fa-circle-exclamation fs-4\" id=\"i-butAlert\"></i>\n\t\t\t</div>\n\t\t\t<div id=\"div-butAlertMessage\" class=\"d-flex align-items-center py-2 px-3\"></div>\n\t\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\"\n\t\t\t\t\tonclick=\"$('#div-butAlert').addClass('d-none');\"></button>\n\t\t</div>\n\n\t\t<div class=\"p-2 mt-2\" id=\"tree\"></div>\n\t</div>\n\t<div class=\"element-holder col d-none\" id=\"attributes-form\">\n\t\t<div class=\"row justify-content-start align-items-center\">\n\t\t\t<div class=\"col-1\"><span id=\"div-nodeType\">Тип</span>:</div>\n\t\t\t<div class=\"col\">\n\t\t\t\t<h3 id=\"div-nodeName\">1</h3>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row justify-content-start align-items-center\">\n\t\t\t<div class=\"col-1\">ID:</div>\n\t\t\t<div class=\"col\" id=\"div-nodeId\">123</div>\n\t\t</div>\n\t\t<hr class=\"mt-2\" />\n\t\t<div class=\"input-group\" id=\"div-cn\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Имя\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" title=\"Имя узла. На одном уровне иерархии не может быть узлов с одинаковыми именами.\"></i>\n\t\t\t\t\t</span>\n\t\t\t<input prsAttribute=\"cn\" onchange=\"onInputChange(event);\" type=\"text\" class=\"form-control\" id=\"input-cn\">\n\t\t</div>\n\t\t<div class=\"input-group mt-2\" id=\"div-description\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Описание\t\t\t\t\t\n\t\t\t\t\t</span>\n\t\t\t<input prsAttribute=\"description\" onchange=\"onInputChange(event);\" type=\"text\" class=\"form-control\" id=\"input-description\"/>\n\t\t</div>\n\t\t<div class=\"input-group mt-2\" id=\"div-prsMethodAddress\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Адрес\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Название метода, под которым он зарегистрирован в системе\">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</span>\n\t\t\t<input prsAttribute=\"prsMethodAddress\" onchange=\"onInputChange(event);\"  type=\"text\" class=\"form-control\" id=\"input-prsMethodAddress\" placeholder=\"\"/>\n\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsValueTypeCode\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Тип значений\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Тип значений, хранящихся в теге. Поддерживаются типы: целочисленный, вещественный, строковый и json.\">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</span>\n\t\t\t<select prsAttribute=\"prsValueTypeCode\" onchange=\"onInputChange(event);\" id=\"input-prsValueTypeCode\" class=\"form-select\" required>\n\t\t\t\t\t\t<option selected value=\"1\">Вещественный</option>\n\t\t\t\t\t\t<option value=\"0\">Целый</option>\n\t\t\t\t\t\t<option value=\"2\">Строковый</option>\n\t\t\t\t\t\t<option value=\"4\">json</option>\n\t\t\t\t\t</select>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsActive\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Активный\n\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\ttitle=\"Активность узла. Если этот флаг сброшен, узел перестаёт функционировать, как и все его дочерние узлы. Но у дочерних узлов флаг активности не изменяется (не реализовано).\"></i>\n\t\t\t\t</span>\n\t\t\t<select prsAttribute=\"prsActive\" onchange=\"onInputChange(event);\" id=\"input-prsActive\" class=\"form-select\" required>\n\t\t\t\t\t<option selected value=\"true\">Да</option>\n\t\t\t\t\t<option value=\"false\">Нет</option>\n\t\t\t\t</select>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsIndex\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Индекс\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Индекс узла на текущем уровне иерархии. Если у узлов на одном уровне иерархии выставлены индексы, платформа будет возвращать список этих узлов, отсортированный в порядке возрастания индексов.\">\n\t\t\t\t\t\t</i>\t\t\t\t\t\n\t\t\t\t\t</span>\n\t\t\t<input prsAttribute=\"prsIndex\" onchange=\"onInputChange(event);\" type=\"number\" class=\"form-control\" id=\"input-prsIndex\" placeholder=\"\"/>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsEntityTypeCode\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Тип\n\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\ttitle=\"Код типа узла. Для методов: 0 - вычислительный метод тега.\">\n\t\t\t\t\t</i>\n\t\t\t\t</span>\n\t\t\t<input prsAttribute=\"prsEntityTypeCode\" onchange=\"onInputChange(event);\"  type=\"number\" class=\"form-control\" id=\"input-prsEntityTypeCode\" placeholder=\"\"/>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsJsonConfigString\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Конфигурация\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Конфигурация узла. Как и атрибут 'Тип' не интерпретируется платформой и нужен для моделей или других приложений. Предполагается, что конфигурация указывается в виде json.\">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</span>\n\t\t\t<input prsAttribute=\"prsJsonConfigString\" onchange=\"onInputChange(event);\" type=\"text\" class=\"form-control\" id=\"input-prsJsonConfigString\" placeholder=\"\"/>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsUpdate\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Обновлять\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Флаг обновления значений тега. Если = ``true``, то на каждую метку времени может быть записано только одно значение тега. Иначе на одну метку времени может быть несколько значений.\">\n\t\t\t\t\t\t</i>\t\t\t\t\t\t\n\t\t\t\t\t</span>\n\t\t\t<select prsAttribute=\"prsUpdate\" onchange=\"onInputChange(event);\" id=\"input-prsUpdate\" class=\"form-select\" required>\n\t\t\t\t\t\t<option selected value=\"true\">Да</option>\n\t\t\t\t\t\t<option value=\"false\">Нет</option>\n\t\t\t\t\t</select>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsDefault\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">По умолчанию\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Флаг узла по умолчанию. На каждом уровне иерархии может быть только один узел по умолчанию. Если создаётся новый узел с флагом Default = true, то платформа сбросит этот флаг у старого узла на соответствующем уровне иерархии и узлом по умолчанию будет новый.\">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</span>\n\t\t\t<select prsAttribute=\"prsDefault\" onchange=\"onInputChange(event);\" id=\"input-prsDefault\" class=\"form-select\" required>\n\t\t\t\t\t\t<option selected value=\"true\">Да</option>\n\t\t\t\t\t\t<option value=\"false\">Нет</option>\n\t\t\t\t\t</select>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsStep\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Шаговый\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Флаг 'шагового' тега. Если = true, то значение тега между двумя соседними метками не интерполируется.\">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</span>\n\t\t\t<select prsAttribute=\"prsStep\" onchange=\"onInputChange(event);\" id=\"input-prsStep\" class=\"form-select\" required>\n\t\t\t\t\t\t<option value=\"true\">Да</option>\n\t\t\t\t\t\t<option selected value=\"false\">Нет</option>\n\t\t\t\t\t</select>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-prsMeasureUnits\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Единицы измерения</span>\n\t\t\t<input prsAttribute=\"prsMeasureUnits\" onchange=\"onInputChange(event);\" type=\"text\" class=\"form-control\" id=\"input-prsMeasureUnits\" />\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-initiatedBy\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Инициаторы:\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\ttitle=\"Список того, что инициирует запуск метода. Теги: изменение значения указанного тега; тревоги: возникновение тревоги; расписание: запланированный момент времени. Все эти события инициируют запуск метода.\">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</span>\n\t\t\t<div class=\"form-control d-flex\">\n\t\t\t\t<div class=\"nav flex-column nav-pills m-2\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n\t\t\t\t\t<button class=\"nav-link nav-link-icon active text-start\" id=\"v-pills-Tags-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-Tags\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-Tags\" aria-selected=\"true\" onClick=\"initiatorsTabClicked('tags')\">\n\t\t\t\t\t\t\t\t<i class=\"fa-solid fa-tags\"></i>&nbsp;&nbsp;Теги\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t<!--\n\t\t\t\t\t\t\t<button class=\"nav-link nav-link-icon text-start\" id=\"v-pills-Alerts-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-Alerts\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-Alerts\" aria-selected=\"false\">\n\t\t\t\t\t\t\t\t<i class=\"fa-solid fa-bell\"></i>&nbsp;&nbsp;Тревоги\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t-->\n\t\t\t\t\t<button class=\"nav-link nav-link-icon text-start\" id=\"v-pills-Schedules-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#v-pills-Schedules\" type=\"button\" role=\"tab\" aria-controls=\"v-pills-Schedules\" aria-selected=\"false\" onClick=\"initiatorsTabClicked('schedules')\">\n\t\t\t\t\t\t\t\t<i class=\"fa-solid fa-clock\"></i>&nbsp;&nbsp;Расписания\n\t\t\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"tab-content\" id=\"v-pills-tabContent\">\n\t\t\t\t\t<div class=\"tab-pane fade show active\" id=\"v-pills-Tags\" role=\"tabpanel\" aria-labelledby=\"v-pills-Tags-tab\"\n\t\t\t\t\t\ttabindex=\"0\">\n\t\t\t\t\t\t<select prsAttribute=\"initiatedBy\" onchange=\"onInputChange(event);\" id=\"input-initiatedByTags\" class=\"form-select mt-1\" size=\"5\" multiple>\n\t\t\t\t\t\t\t\t\t<option selected value=\"true\">Текст текст текст</option>\n\t\t\t\t\t\t\t\t\t<option value=\"false\">Текст текст текст</option>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--\n\t\t\t\t\t\t\t<div class=\"tab-pane fade\" id=\"v-pills-Alerts\" role=\"tabpanel\" aria-labelledby=\"v-pills-Alerts-tab\" tabindex=\"0\">\n\t\t\t\t\t\t\t\t<select prsAttribute=\"initiatedBy\" onchange=\"onInputChange(event);\" id=\"input-initiatedByAlerts\" class=\"form-select mt-1\" size=\"5\" multiple>\n\t\t\t\t\t\t\t\t\t<option selected value=\"true\">Текст текст текст</option>\n\t\t\t\t\t\t\t\t\t<option value=\"false\">Текст текст текст</option>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t-->\n\t\t\t\t\t<div class=\"tab-pane fade\" id=\"v-pills-Schedules\" role=\"tabpanel\" aria-labelledby=\"v-pills-Schedules-tab\"\n\t\t\t\t\t\ttabindex=\"0\">\n\t\t\t\t\t\t<select prsAttribute=\"initiatedBy\" onchange=\"onInputChange(event);\" id=\"input-initiatedBySchedules\" class=\"form-select mt-1\" size=\"5\" multiple>\n\t\t\t\t\t\t\t\t\t<option selected value=\"true\">Текст текст текст</option>\n\t\t\t\t\t\t\t\t\t<option value=\"false\">Текст текст текст</option>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-alertConfig\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Конфигурация:\n\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\ttitle=\"Конфигурация тревоги.\">\n\t\t\t\t\t</i>\n\t\t\t\t</span>\n\t\t\t<div class=\"form-control\">\n\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t<div class=\"col-1 text-small-size mx-1\">Сравнение\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\t\ttitle=\"Условие сравнения значения тега с критическим значением.\">\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 text-small-size mx-1\">Значение\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\t\ttitle=\"Критическое значение тега.\">\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col text-small-size mx-1\">Автоквитирование\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" data-bs-html=\"true\"\n\t\t\t\t\t\t\t\ttitle=\"Тип квитирования тревоги: вручную или автоматически.\">\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"d-flex align-items-start\">\n\t\t\t\t\t<div class=\"col-1 mx-1\">\n\t\t\t\t\t\t<select prsAttribute=\"alertConfig\" onchange=\"onInputChange(event);\" id=\"input-alertConfHigh\" class=\"form-select\" size=\"1\">\n\t\t\t\t\t\t\t\t<option selected value=\"true\">&#62;=</option>\n\t\t\t\t\t\t\t\t<option value=\"false\">&#60;</option>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 mx-1\">\n\t\t\t\t\t\t<input prsAttribute=\"alertConfig\" onchange=\"onInputChange(event);\"  type=\"number\" class=\"form-control\" id=\"input-alertConfValue\" placeholder=\"\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 mx-1\">\n\t\t\t\t\t\t<select prsAttribute=\"alertConfig\" onchange=\"onInputChange(event);\" id=\"input-alertConfAutoack\" class=\"form-select\" size=\"1\">\n\t\t\t\t\t\t\t\t<option selected value=\"true\">Да</option>\n\t\t\t\t\t\t\t\t<option value=\"false\">Нет</option>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-scheduleConfig\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Конфигурация:\n\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\ttitle=\"Конфигурация расписания.\">\n\t\t\t\t\t</i>\n\t\t\t\t</span>\n\t\t\t<div class=\"form-control\">\n\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t<div class=\"col-2 text-small-size mx-1 px-1\">Начало\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\t\ttitle=\"Дата начала работы расписания.\">\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 text-small-size mx-1 px-1\">Периодчиность\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\t\ttitle=\"Секунды/минуты/часы/дни.\">\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 text-small-size mx-1 px-1\">Длина периода\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-2 text-small-size mx-1 px-1\">Окончание\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\t\ttitle=\"Дата окончания работы расписания.\">\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"d-flex align-items-start\">\n\t\t\t\t\t<div class=\"col-2 mx-1\">\n\t\t\t\t\t\t<input prsAttribute=\"scheduleConfig\" onchange=\"onInputChange(event);\"  type=\"datetime-local\" class=\"form-control\" id=\"input-scheduleConfStart\" placeholder=\"\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 mx-1\">\n\t\t\t\t\t\t<select prsAttribute=\"scheduleConfig\" onchange=\"onInputChange(event);\" id=\"input-scheduleConfIntervalType\" class=\"form-select\" size=\"1\">\n\t\t\t\t\t\t\t\t<option selected value=\"seconds\">Секунды</option>\n\t\t\t\t\t\t\t\t<option value=\"minutes\">Минуты</option>\n\t\t\t\t\t\t\t\t<option value=\"hours\">Часы</option>\n\t\t\t\t\t\t\t\t<option value=\"days\">Дни</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 mx-1\">\n\t\t\t\t\t\t<input prsAttribute=\"scheduleConfig\" onchange=\"onInputChange(event);\"  type=\"number\" class=\"form-control\" id=\"input-scheduleConfIntervalValue\" placeholder=\"\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-2 mx-1\">\n\t\t\t\t\t\t<input prsAttribute=\"scheduleConfig\" onchange=\"onInputChange(event);\"  type=\"datetime-local\" class=\"form-control\" id=\"input-scheduleConfEnd\" placeholder=\"\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"input-group mt-2\" id=\"div-parameters\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Параметры\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\t\ttitle=\"Параметры, передаваемые для расчёта в метод.\">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</span>\n\t\t\t<div class=\"form-control\">\n\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t<div id=\"indent\"></div>\n\t\t\t\t\t<div class=\"col-1 text-small-size\">Индекс\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\t\t\ttitle=\"Индекс задаёт порядок, в котором параметры передаются в метод.\">\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1 text-small-size\">Имя\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\"\n\t\t\t\t\t\t\t\t\ttitle=\"Имя не влияет на расчёт, используется только для удобного обозначения параметра.\">\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col text-small-size\">Конфигурация\n\t\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" data-bs-html=\"true\"\n\t\t\t\t\t\t\t\t\ttitle='Тело запроса data/get. Полученное значение будет передано методу в качестве значения параметра.'>\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"d-flex align-items-start\">\n\t\t\t\t\t<div class=\"text-left m-1\">\n\t\t\t\t\t\t<button id=\"but-addParameter-0\" class=\"btn btn-sm btn-primary\" onclick=\"addParameter(event, null);\">\n\t\t\t\t\t\t\t\t\t<span><i class=\"fa-solid fa-plus\"></i></span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"div-list-parameters\" class=\"align-items-stretch\">\n\t\t\t\t\t\t<div class=\"d-flex align-items-center\" prsIndex=\"0\" id=\"span-parameter-0\">\n\t\t\t\t\t\t\t<div class=\"col-1 me-2\">\n\t\t\t\t\t\t\t\t<input class=\"form-control form-control-sm\" prsAttribute=\"parameter\" onchange=\"onInputChange(event);\" type=\"number\" id=\"input-parameter-prsIndex-0\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-1 me-2\">\n\t\t\t\t\t\t\t\t<input class=\"form-control form-control-sm\" prsAttribute=\"parameter\" onchange=\"onInputChange(event);\" type=\"text\" id=\"input-parameter-cn-0\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col me-2\">\n\t\t\t\t\t\t\t\t<input class=\"form-control form-control-sm\" prsAttribute=\"parameter\" onchange=\"onInputChange(event);\" type=\"text\" id=\"input-parameter-prsJsonConfigString-0\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button id=\"but-deleteParameter-0\" class=\"btn btn-sm m-1 btn-danger\" onclick=\"deleteParameter(event);\">\n\t\t\t\t\t\t\t\t\t\t<span><i class=\"fa-solid fa-minus\"></i></span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div id=\"div-updateAlert\" class=\"alert alert-message alert-dismissible d-flex rounded p-0 mt-3 d-none\" role=\"alert\">\n\t\t\t<div class=\"alert-icon d-flex justify-content-center align-items-center flex-grow-0 flex-shrink-0 py-3\">\n\t\t\t\t<i class=\"fa-solid fa-circle-exclamation fs-4\" id=\"i-updateAlert\"></i>\n\t\t\t</div>\n\t\t\t<div id=\"div-updateAlertMessage\" class=\"d-flex align-items-center py-2 px-3\"></div>\n\t\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\"\n\t\t\t\t\tonclick=\"$('#div-updateAlert').addClass('d-none');\"></button>\n\t\t</div>\n\n\t\t<div class=\"text-left mt-sm-2\">\n\t\t\t<button id=\"but-save\" class=\"btn btn-primary btn-icon btn-sm disabled\" onclick=\"saveChanges();\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-download\"></i></span>Записать\n\t\t\t\t\t</button>\n\t\t\t<button id=\"but-reset\" class=\"btn btn-secondary btn-icon btn-sm disabled\" onclick=\"resetChanges();\">\n\t\t\t\t\t\t<span class=\"icon\"><i class=\"fa-solid fa-trash-can\"></i></span>Сбросить\n\t\t\t\t\t</button>\n\t\t</div>\n\t\t<hr class=\"mt-2\" />\n\n\t\t<div class=\"input-group mt-2\" id=\"div-tagData\">\n\t\t\t<span class=\"input-group-text prs-input-label space-between\">Данные тега\n\t\t\t\t\t<i class=\"fa-solid fa-circle-info gray\" data-bs-toggle=\"tooltip\" \n\t\t\t\t\t\ttitle=\"Просмотр и запись значений тега.\">\n\t\t\t\t\t</i>\n\t\t\t\t</span>\n\t\t\t<div class=\"form-control\">\n\t\t\t\t<details>\n\t\t\t\t\t<summary>\n\t\t\t\t\t\tЧтение/запись\n\t\t\t\t\t</summary>\n\t\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t\t<div class=\"form-control m-1\">\n\t\t\t\t\t\t\t<b>Запрос на чтение</b>\n\t\t\t\t\t\t\t<div class=\"text-small-size my-2\">\n\t\t\t\t\t\t\t\tGET:&nbsp;&nbsp;<span id=\"span-tagGetDataURL\">http://srv/v1/data/?q=</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"text-small-size \">\n\t\t\t\t\t\t\t\t<div class=\"form-check form-switch\">\n\t\t\t\t\t\t\t\t\t<input checked class=\"form-check-input\" type=\"checkbox\" id=\"input-tagGetDataFormat\" onclick=\"formTagDataPanels();\">\n\t\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"input-tagGetDataFormat\">Форматировать метку времени</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"text-small-size\">\n\t\t\t\t\t\t\t\t<div class=\"form-check form-switch\">\n\t\t\t\t\t\t\t\t\t<input class=\"form-check-input\" type=\"checkbox\" id=\"input-tagGetDataActual\" onclick=\"formTagDataPanels();\">\n\t\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"input-tagGetDataActual\">Значение: текущее/последнее записанное</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary btn-sm\" id=\"button-tagGetData\" onclick=\"getTagData();\">Получить данные</button>\n\t\t\t\t\t\t\t<div class=\"text-small-size form-control mt-2\">\n\t\t\t\t\t\t\t\t<table class=\"table table-sm\">\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Значение</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Время</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Качество</th>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody id=\"tbody-tagData\">\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"form-control m-1\">\n\t\t\t\t\t\t\t<b>Запрос на запись</b>\n\t\t\t\t\t\t\t<div class=\"text-small-size my-2\">\n\t\t\t\t\t\t\t\t<table class=\"table table-sm\">\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\tPOST:\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"span-tagSetDataURL\">http://srv/v1/data/</span>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\tjson body:\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control form-control-sm\" readonly autocomplete=\"off\" id=\"span-tagSetDataBody\">{\"data\": [{\"tagId\": \".....\", }]}</textarea>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\tЗначение:\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control form-control-sm\" id=\"input-tagSetDataValue\" onchange=\"tagSetDataValueChanged();\"></input>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"div-setDataAlert\" class=\"alert alert-message alert-dismissible d-flex rounded p-0 mt-3 d-none\"\n\t\t\t\t\t\t\t\trole=\"alert\">\n\t\t\t\t\t\t\t\t<div class=\"alert-icon d-flex justify-content-center align-items-center flex-grow-0 flex-shrink-0 py-3\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa-solid fa-circle-exclamation fs-4\" id=\"i-setDataAlert\"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div id=\"div-setDataAlertMessage\" class=\"d-flex align-items-center py-2 px-3\"></div>\n\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\tonclick=\"$('#div-setDataAlert').addClass('d-none');\"></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary btn-sm\" id=\"button-tagSetData\" onclick=\"setTagData();\">Записать данные</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</details>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "afterRender",
          "helpers",
          "styles"
        ],
        "externalStyles": [
          {
            "id": "3f6b50d7-3b08-402f-afd3-505e72e586ff",
            "url": "public/assets/css/bootstrap.min.css"
          },
          {
            "id": "f9263445-864f-4c57-9bb4-c6370aaee264",
            "url": "public/assets/css/fonts.css"
          },
          {
            "id": "76ff8962-1f5b-49de-8fee-5c0e98ad918b",
            "url": "public/assets/css/bstreeview.css"
          },
          {
            "id": "920f5335-a63b-4f1b-a321-93b03f200328",
            "url": "public/assets/css/fontawesome.css"
          },
          {
            "id": "7be82d8c-bad2-41c9-8a9d-2ddc54636172",
            "url": "public/assets/css/solid.css"
          },
          {
            "id": "33b60675-7ee2-441a-9551-1a26f80e2bf6",
            "url": "public/assets/css/prs.css"
          }
        ],
        "helpers": "",
        "renderMode": "data",
        "styles": "",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_PERESVET}"
          },
          "fields": [
            {
              "jsonPath": "$count(data) ? [data.id] : [0]",
              "language": "jsonata"
            }
          ],
          "method": "GET",
          "params": [
            [
              "q",
              "{\"base\":\"\",\"attributes\":[\"cn\"]}"
            ]
          ],
          "queryParams": "",
          "refId": "A",
          "urlPath": "/objects/"
        }
      ],
      "title": "Конфигуратор модели",
      "type": "marcusolsson-dynamictext-panel"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {
    "hidden": true
  },
  "timezone": "browser",
  "title": "Конфигуратор",
  "uid": "ddy59kw4v5ssgb",
  "version": 109,
  "weekStart": ""
}